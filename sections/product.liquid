{% assign current_product = product.selected_or_first_available_variant %}
{% assign product_image = current_product.featured_image | default: product.featured_image %}

{% assign product_collection = collection.title | link_to: product_collection.url %}
{% assign collectProductName = "" %}

{% unless product_collection == blank %}
{% assign collectProductName = product_collection %}
{% endunless %}

{% assign coeid = "" %}


{% for product_image in product.images %}
<link rel="preload" as="image" href="{{ product_image.src | image_url }}">
<link rel="prefetch" href="{{ product_image.src | image_url }}">
{% endfor %}


<section class="page-product-detail">
  <div class="product-images">
    <ul class="product-images-thumbnails">
      {% for product_image in product.images %}
      <li>
        <a href="{{ product_image.src | image_url }}" data-pswp-width="{{ product_image.width }}"
          data-pswp-height="{{ product_image.height }}">
          {{ product_image | image_url : width: 160 | image_tag:
          width: 160,
          height: 160,
          loading: "lazy",
          alt: product_image.alt | escape
          }}
        </a>
      </li>
      {% endfor %}
    </ul>
    <div class="ImageMe test-gallery">
      <a href="{{ product_image.src | image_url }}" data-pswp-width="{{ product_image.width }}"
        data-pswp-height="{{ product_image.height }}">
        <img
          class="global-media-settings global-media-settings--no-shadow{% if variant_image %} product__media-item--variant{% endif %}"
          src="{{ product_image.src | image_url }}" alt="{{ media.alt | escape }}" loading="lazy"
          data-media-id="{{ media.id }}">
      </a>
      {% for product_image in product.images offset:1 %}
      <a href="{{ product_image.src | image_url }}" style="opacity: 0; width: 0; height: 0;"
        data-pswp-src="{{ product_image | image_url }}" data-pswp-width="{{ product_image.width }}"
        data-pswp-height="{{ product_image.height }}" target="_blank">
        &nbsp;
      </a>
      {% endfor %}
    </div>
  </div>
  <div class="product-content">
    <h2 class="product-title">{{product.title}}</h2>
    {% if customer and customer.tags contains 'admin' %}
    <div class="product-sku">
      {%- assign current_variant = product.selected_or_first_available_variant -%}
      {% for variant in product.variants %}
      <span class="product__variant--sku"> Product Code : {{ variant.sku }} </span>
      {% endfor %}
    </div>
    {% endif %}
    <p class="product-price">{{current_product.price | money_with_currency }}</p>

    <p class="product-notice-content {% for collection in product.collections%} {{collection.title}} {% endfor %}">
      Our artisanal silver jewellery collection is currently available for shipment within INDIA.
    </p>

    <!-- TODO: Begin -- Need to add link this for size chart -->
    <div hidden>
      {% assign text = product | json %}
      {% assign objArr = text | split: ',' %}
      {% assign keyArr = ''%}
      {% assign valArr = ''%}

      {% for obj in objArr %}
      {% assign key = obj | split: ':' | first %}
      {% assign value = obj | split: ':' | last %}
      {% assign keyArr = keyArr| append: ',' | append: key %}
      {% assign valArr = valArr| append: ',' | append: value %}
      {% endfor %}

      {% assign keyArr = keyArr | remove_first: ',' | remove: '{' | remove: '"' | split: ',' %}
      {% assign valArr = valArr | remove_first: ',' | remove: '}' | remove: '"' | split: ',' %}

      {% for obj in objArr %}
      {{keyArr[forloop.index0]}} :{{valArr[forloop.index0]}}
      <br />
      {% endfor %}


      {{ product.variants | json }}
    </div>

    <!-- TODO: END --  Need to add link this for size chart -->


    <!--product form-->
    {% form 'product', product, class:"product-form", id:"AddToCartForm" %}

    {%- unless product.has_only_default_variant -%}
    {%- for option in product.options_with_values -%}


    <fieldset id="ProductSelect-option-{{ forloop.index0 }}" name="id">
      <legend>
        {{ option.name | escape }}
      </legend>
      {%- for value in option.values -%}
      <!-- Check to see if there's a product size option. If there is a size, check to see if there's any availble for purchase. If not, set the variat control in a "disabled" state. -->
      {%- assign variant_label_state = true -%}

      {%- if product.options.size == 1 -%}
      {%- unless product.variants[forloop.index0].available -%}
      {%- assign variant_label_state = false -%}
      {%- endunless -%}
      {%- endif -%}

      <input type="radio" {% if option.selected_value==value %} checked="checked" {% endif %} {% unless
        variant_label_state %} disabled="disabled" {% endunless %} value="{{ value | escape }}"
        data-index="option{{ forloop.index }}" name="{{ option.name | handleize }}"
        id="ProductSelect-option-{{ option.name | handleize }}-{{ value | escape }}">
      <label for="ProductSelect-option-{{ option.name | handleize }}-{{ value | escape }}">
        {{ value | escape }}
      </label>
      {%- endfor -%}
    </fieldset>


    {%- endfor -%}
    {%- endunless -%}

    <div class="mb-3" hidden>
      <label for="Quantity" class="form-label">Quantity</label>
      <input type="number" class="form-control" name="quantity" id="Quantity" value="1" max="1">
    </div>

    <!-- check the data -->
    {% assign with_blouse = true %}
    {% for tag in product.tags %}
    {% if tag == "With Blouse" %}
    {% assign with_blouse = false %}
    {% break %}
    {% endif %}
    {% endfor %}
    <!-- if data true -->
    {% if with_blouse %}
    <div class="blouse-stitching hide" id="hulkapps_custom_options_{{ product.id }}"> </div>
    {% else %}
    <div class="blouse-stitching" id="hulkapps_custom_options_{{ product.id }}"> </div>
    {% endif %}

    {% if product.type == "Sarees" %}
    <div class="note measurement-select" style="padding: 5px;margin-bottom: 10px;font-size: 14px;">
      To revise your blouse measurements, please go back to “Add measurements” and make the changes.
    </div>
    {% endif %}


    <div id="login-link" class="hide" style="padding: 0 5px;margin-bottom: 10px;font-size: 14px;">Please <a
        style="color: #880216;" href="/account/login?checkout_url={{shop.url}}{{product.url}}"
        id="addMeasurementLinkLogin">Login</a> to add measurement. Kindly provide measurement details for blouse
      stitching before adding this product to the cart.</div>
    <div id="add-measurement-link" class="hide" style="padding: 0 5px;margin-bottom: 10px;font-size: 14px;">Please add
      measurement <a
        style="color: #fff !important; display: inline-block; padding: 2px 4px; background-color: #880216; border-radius: 5px;"
        href="/pages/measurement?checkout_url={{shop.url}}{{product.url}}" id="addMeasurementLink">Add</a></div>
    <div class="measurement-select hide" style="padding: 0 5px; margin-bottom: 10px;">
      <label id="select-measurement-title" for="select-measurement">Select Measurement:</label>
      <select id="select-measurement" style="width:100%">
        <option value="">Select</option>
      </select>
      <!-- <div id="add-measurement-link-select" style="padding: 0 5px;margin-bottom: 10px;font-size: 14px;">
<a style="color: #880216;" href="/pages/measurement?checkout_url={{shop.url}}{{product.url}}"><strong>Add new measurement</strong>
</a>
</div> -->
    </div>
    <p id="measurement-data" class="line-item-property__field hide">
    </p>

    <button type="submit" name="add" id="AddToCard" class="product-add-to-cart-button" {% unless product.available %}
      disabled="disabled" {% endunless %}>
      {%- if product.available -%}
      Add to Cart
      {%- else -%}
      Sold Out
      {%- endif -%}
    </button>

    {{ form | payment_button }}

    {% endform %}



    <!--end product form-->


    <div class="modal">
      <div class="modal-overlay modal-toggle"></div>
      <div class="modal-wrapper modal-transition">
        <div class="modal-header">
          <button class="modal-close modal-toggle"><svg class="icon-close icon" viewBox="0 0 24 24">
              <use xlink:href="#close"></use>
            </svg></button>
          <h2 class="modal-heading">Size Chart and Measurement Guide </h2>
        </div>
        <div class="modal-body">
          <div class="modal-content">
            <div class="size-data">
              {% assign suppliers = product.metafields.custom.size_chart.value %}
              {% for supplier in suppliers %}
              <h2 class="sizeChatTitle">{{supplier.type}}</h2>
              <div class="sizeChart">
                <div class="sizeChartLable">
                  <table>
                    <tr>
                      <td>
                        year
                      </td>
                      <td>
                        size
                      </td>
                      <td>
                        shoulder
                      </td>
                      <td>
                        sleeves
                      </td>
                      <td>
                        chest
                      </td>
                      <td>
                        height
                      </td>
                    </tr>
                  </table>
                </div>
                <div class="sizeChartValue">
                  {% for dfdf in supplier.value %}
                  <!-- {{ dfdf | json }} -->
                  {{ dfdf[0] }}
                  {% endfor %}
                  <table>
                    {% for dfdf in supplier.value %}
                    <tr>
                      {% for ddf in dfdf.value %}
                      <td> {{ dfdf.age }}</td>
                      <td>{{ ddf.size }}</td>
                      <td> {{ ddf.shoulder }}</td>
                      <td> {{ ddf.sleeves }}</td>
                      <td> {{ ddf.chest }}</td>
                      <td> {{ ddf.height }}</td>
                      {% endfor %}
                    </tr>
                    {% endfor %}
                  </table>
                </div>
              </div>
              {% endfor %}
            </div>
            <div class="size-data-image">
              <!-- <img width="538" height="538" loading="lazy"  src="https://cdn.shopify.com/s/files/1/0490/1158/9282/files/sundarisilks-how-to-{{ collection.title | remove:"/" | remove: " " }}.jpg" /> -->
              <img width="538" height="538" loading="lazy"
                src="https://cdn.shopify.com/s/files/1/0490/1158/9282/files/sundarisilks-how-to-Shirts.jpg?" />
            </div>
          </div>
        </div>
      </div>
    </div>



    {% if product.content != blank %}
    <h2 class="product-title-secondary">Description</h2>
    <p class="product-description">{{product.content | strip_html }}</p>
    {% endif %}


    {% if product.metafields.custom.material.value != blank %}
    <h2 class="product-title-secondary"> Specification </h2>
    {% endif %}
    <div class="product-detail">
      {% if product.metafields.custom.material.value != blank %}
      <dl>
        <dt> Material</dt>
        <dd>{{ product.metafields.custom.material.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.border_color.value != blank %}
      <dl>
        <dt>Body Color</dt>
        <dd>{{ product.metafields.custom.border_color.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.pallu_color.value != blank %}
      <dl>
        <dt>Pallu Color</dt>
        <dd>{{ product.metafields.custom.pallu_color.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.blouse.value != blank %}
      <dl>
        <dt> Blouse</dt>
        <dd>{{ product.metafields.custom.blouse.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.border.value != blank %}
      <dl>
        <dt> Border</dt>
        <dd>{{ product.metafields.custom.border.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.blouse_color.value != blank %}
      <dl>
        <dt> Blouse Color</dt>
        <dd>{{ product.metafields.custom.blouse_color.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.zari.value != blank %}
      <dl>
        <dt> Zari</dt>
        <dd>{{ product.metafields.custom.zari.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.purity.value != blank %}
      <dl>
        <dt> Purity </dt>
        <dd>{{ product.metafields.custom.purity.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.size.value != blank %}
      <dl>
        <dt> Size </dt>
        <dd>{{ product.metafields.custom.size.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.color.value != blank %}
      <dl>
        <dt> Color </dt>
        <dd>{{ product.metafields.custom.color.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.sleeve.value != blank %}
      <dl>
        <dt> Sleeve </dt>
        <dd>{{ product.metafields.custom.sleeve.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.bottom_color.value != blank %}
      <dl>
        <dt> Button Color </dt>
        <dd>{{ product.metafields.custom.bottom_color.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.dupatta.value != blank %}
      <dl>
        <dt> Dupatta </dt>
        <dd>{{ product.metafields.custom.dupatta.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.collar.value != blank %}
      <dl>
        <dt> Collar </dt>
        <dd>{{ product.metafields.custom.collar.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.age.value != blank %}
      <dl>
        <dt> Age </dt>
        <dd>{{ product.metafields.custom.age.value }}</dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.angavastram.value != blank %}
      <dl>
        <dt> Angavastram </dt>
        <dd>{{ product.metafields.custom.angavastram.value }}</dd>
      </dl>
      {% endif %}
    </div>
    <div class="product-common-note">
      {% if product.metafields.custom.wash_care_tips.value != blank %}
      <dl>
        <dt> Wash Care </dt>
        <dd> {{ product.metafields.custom.wash_care_tips.value }} </dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.delivery_shipping.value != blank %}
      <dl>
        <dt> Delivery Shipping </dt>
        <dd> {{ product.metafields.custom.delivery_shipping.value }} </dd>
      </dl>
      {% endif %}
      {% if product.metafields.custom.note.value != blank %}
      <dl>
        <dt> Note </dt>
        <dd> {{ product.metafields.custom.note.value }} </dd>
      </dl>
      {% endif %}
    </div>
  </div>
</section>

<script type="application/ld+json">
  {
    "@context": "http://schema.org/",
    "@type": "Product",
    "name": {{ product.title | json }},
    "url": {{ shop.url | append: product.url | json }},
    {%- if product.featured_media -%}
      {%- assign media_size = product.featured_media.preview_image.width | append: 'x' -%}
      "image": [
        {{ product.featured_media | img_url: media_size | prepend: "https:" | json }}
      ],
    {%- endif -%}
    "description": {{ product.description | strip_html | json }},
    {%- if current_variant.sku != blank -%}
      "sku": {{ current_variant.sku | json }},
    {%- endif -%}
    "brand": {
      "@type": "Thing",
      "name": {{ product.vendor | json }}
    },
    "offers": [
      {%- for variant in product.variants -%}
        {
          "@type" : "Offer",
          {%- if variant.sku != blank -%}
            "sku": {{ variant.sku | json }},
          {%- endif -%}
          "availability" : "http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}",
          "price" : {{ variant.price | divided_by: 100.00 | json }},
          "priceCurrency" : {{ cart.currency.iso_code | json }},
          "url" : {{ shop.url | append: variant.url | json }}
        }{% unless forloop.last %},{% endunless %}
      {%- endfor -%}
    ]
  }
  </script>

<script language="Javascript" type="text/javascript">
  var myProduct = {{ product | json}};
  var customTags = myProduct.tags;

  document.addEventListener('readystatechange', event => {

    // When HTML/DOM elements are ready:
    if (event.target.readyState === "interactive") {
      console.log("dom interactive");
    }
    // When window loaded ( external resources are loaded too- `css`,`src`, etc...)
    if (event.target.readyState === "complete") {
      console.log("dom complete");
      var withBlouse = customTags.filter(v => v.toLocaleLowerCase() === 'with blouse') || [];
      if (withBlouse.length) {
        $(".blouse-stitching").removeClass('hide');
      } else {
        var isSaree = myProduct.title.match(/saree/gi) || [];
        isSaree = isSaree.length;
        var isBlouse = customTags.filter(v => (v.toLocaleLowerCase().match(/blouse/gi) || []).length);
        isBlouse = isBlouse.length;
        if (isSaree || isBlouse) {
          $(".blouse-stitching").removeClass('hide');
          $('.blouse-stitching .hulkapps_option_set .hulkapps_option:nth-child(2)').remove();
        }
      }
    }
  });

  $(".blouse-stitching").on('change', function (e) {
    console.log('blouse stitching');
    var blouseStiching;
    console.log('--');
    var measurementType = ['', 'plain blouse', 'embroidered blouse'];
    var measurementArray = [];
    var index = $("select[name='properties[Alankara Blouse Stitching]']").prop('selectedIndex');
    var blouseStiching = $("select[name='properties[Alankara Blouse Stitching]']").val();
    var blouseStichingData = $("select[name='properties[Alankara Blouse Stitching]'] :selected").attr("data-conditional-value");
    console.log("blouse select index :" + index);
    console.log("blouse select blouseStiching :" + blouseStiching);

    $("#add-measurement-link").addClass("hide");

    // -- find the customer if logged in or not --/
    // if blouse stitching index is greater then 1
    if (index > 0) {
      $(".hulkapps_submit_cart").prop('disabled', true);
      $(".shopify-payment-button__button").prop('disabled', true);
      console.log('index > 0 if remove class if');
    } else {
      $(".hulkapps_submit_cart").prop('disabled', false);
      $(".shopify-payment-button__button").prop('disabled', false);
      console.log('index > 0 else remove class else');
    }

    // don't know how this function works but need to check how this work to show please add measurement <ADD> btn
    var currentTypeMeasurements = measurementArray.filter(v => v.type === measurementType[index]) || [];
    console.log(currentTypeMeasurements);
    if (index && !currentTypeMeasurements.length) {
      console.log(index, currentTypeMeasurements, currentTypeMeasurements.length);

      $("#add-measurement-link").removeClass("hide");

      //$(".measurement-select").addClass("hide");
      $(".hulkapps_submit_cart").prop('disabled', true);
      $(".shopify-payment-button__button").prop('disabled', true);
      console.log('index && currentTypeMeasurements length if');
      if (index == 1) {
        $("#select-measurement-title").text("Select your Plain blouse measurement");
      } else if (index == 2) {
        $("#select-measurement-title").text("Select your Embroidered blouse measurement");
      }
    } else {
      console.log('index && currentTypeMeasurements length else');
    }
  });

  // add measurement link btn select function
  $('#addMeasurementLink').click(function () { setProductValues(); });
  function setProductValues() {
    let picoFallsOption;
    let measurementTypeOption;
    let quantity = $('input[name="quantity"]')[0].value;
    if (!!$('.hulkapps_check_option > input') && $('.hulkapps_check_option > input').length > 0) {
      picoFallsOption = $('.hulkapps_check_option > input')[0].checked;
    }
    if ($('.hulkapps_option_value > select') && $('.hulkapps_option_value > select').length > 0) {
      measurementTypeOption = $('.hulkapps_option_value > select')[0].value;
    }
    var selectedProduct = {
      product: window.location.pathname.split('/')[2],
      quantity,
      picoFallsOption,
      measurementTypeOption
    };
    localStorage.setItem('selectedProductValues', JSON.stringify(selectedProduct));
    console.log('local selectProduct');
    console.log(localStorage);
    console.log(localStorage.setItem);
  }

  // if we have measurement id in url
  $(window).on('load', function () {
    console.log('value from measurement page');

    // if we have measurement id in the url
    if (window.location.search.includes("?measurement_id=")) {

      console.log(window.location);
      var queryString = window.location.search;
      console.log(queryString);
      var urlParams = new URLSearchParams(queryString);
      var productURLb = urlParams.get('measurement_id');
      console.log(productURLb);
      console.log(JSON.parse(localStorage.getItem('selectedProductValues')));
      var productValues = JSON.parse(localStorage.getItem('selectedProductValues'));

      // check the product id in localstorage
      if (productValues != null || productValues != undefined) {
        console.log('checking prodcut value not null in localstorage if ');
        // trying to access the local storage
        if (productURLb === productValues.measurement.id) {
          console.log('URL id matching with localstorage');
          // pass the qty
          if (!!productValues['quantity']) {
            $('input[name="quantity"]')[0].value = productValues['quantity'];
          }

          // check the pico fall if we added previously
          if (Object.keys(productValues).includes('picoFallsOption')) {
            console.log('object key productValue picoFallsOption');
            if (productValues['picoFallsOption'] === false) {
              $('.hulkapps_check_option > input').click();
              console.log('if object key productValue picoFallsOption');
            }
            else {
              // Just small hackie
              $('.hulkapps_check_option > input').click();
              $('.hulkapps_check_option > input').click();
              console.log('else object key productValue picoFallsOption');
            }
          }
          // select the blouse option select in hulk app
          $('.hulkapps_check_option > input').click();
          if (Object.keys(productValues).includes('measurementTypeOption')) {
            var measurmentType = productValues['measurement'].type.startsWith('plain')
              ? $('.hulkapps_option_value > select option')[1].value : $('.hulkapps_option_value > select option')[2].value;
            $('.hulkapps_option_value > select')[0].value = measurmentType;
            console.log(measurmentType);
            console.log('.hulkapps_check_option > input');
          }

          // conver and load data in hidden input
          // enable the select option
          // $(".measurement-select").removeClass("hide");
          $("#measurement-data").removeClass("hide");
          var selectedMeasurement = encodeMeasurement([productValues['measurement']])[0];
          var measurementObj = selectedMeasurement;
          var measurementValues = `<input readonly type="hidden" name="properties[Measurements]" value="-"><div class="row">`;
          measurementObj.keyValues.forEach(function (k) {
            measurementValues += `<div class="col-6"><label for="${k.keyLabel}">${k.keyLabel}</label><input readonly type="text" name="properties[${k.keyLabel}]" value="${k.valueLabel}"></div>`;
          });
          measurementValues += `</div>`;

          console.log('timeout 4000');
          $("#measurement-data").empty().append(measurementValues);
          $('#select-measurement')[0].value = JSON.stringify(selectedMeasurement);
          var cusMadTitle = $("input[name='properties[Title]']").val();
          $('#select-measurement').append(`<option value="${cusMadTitle}" selected>${cusMadTitle}</option>`);
          console.log(measurementValues);
          console.log(selectedMeasurement);
        } else {
          console.log('URL id not matching with localstorage');
        }

      } else {
        console.log('checking prodcut value not null in localstorage else ');
      }


    } else {
      console.log(window.location);
      console.log('no value from measurement page');
    }
  });
</script>

<script>
  function encodeMeasurement(list) {
    console.log('encodeMeasurement');
    let updatedMeasurementList = [];
    for (let i = 0; i < list.length; i++) {
      let keyValueObject = {};
      let keyValues = [];
      Object.keys(list[i]).forEach(key => {
        if (key !== 'id' && key !== 'type') {
          let object = {};
          object['key'] = key;
          object['keyLabel'] = capitalizeTheFirstLetterOfEachWord(key.replaceAll('_', ' '));
          object['value'] = list[i][key];
          object['valueLabel'] = capitalizeTheFirstLetterOfEachWord(list[i][key].replaceAll('-', ' '));
          keyValues.push(object);
        } else {
          keyValueObject[key] = list[i][key];
        }
      });
      keyValueObject['keyValues'] = keyValues;
      updatedMeasurementList.push(keyValueObject);
    }
    return updatedMeasurementList;
  }

  function capitalizeTheFirstLetterOfEachWord(words) {
    console.log('capitalizeTheFirstLetterOfEachWord');
    var separateWord = words.toLowerCase().split(' ');
    for (var i = 0; i < separateWord.length; i++) {
      separateWord[i] = separateWord[i].charAt(0).toUpperCase() +
        separateWord[i].substring(1);
    }
    return separateWord.join(' ');
  }
</script>
