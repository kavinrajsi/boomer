<div class="collection-page-header">
  <div class="collection-page-title">
    {% if collection.title != blank %}
    <h1>{{ collection.title }}</h1>
    {% endif %}
  </div>
</div>
{% render 'filter' %}
<div class="fixedElement section-{{ section.id }}-padding collectionGridThree">
  <section>
    {% paginate collection.products by 24 %}
    <div class="collection-list-grid" collection-list-mobile="2" collection-list-tablet="4" collection-list-desktop="4">
      {% for product in collection.products %}
      {% unless product == empty %}
<script type="application/json" id="ProductJson-{{ section.id }}">
{{ product | json }}
</script>

<div class="product__card">
  <div class="product__card--img">
    <a href="{{ product.url | within: collection }}" class="product__card--link">
      <div class="product__card--image--wrapper">
        {% if product.featured_image != blank %}
        <!-- [200,400,600,700,800,900,1000,1200] -->
        <img loading="lazy" id="Image-{{ image.id }}" class="blur-up responsive-image__image lazyload"
          src="{{ product.featured_image | image_url: width: '300x', format: 'pjpg' }}"
          data-src="{{ product.featured_image | image_url: width: '300x', format: 'pjpg' }}"
          data-aspectratio="{{ product.featured_image.aspect_ratio }}"
          data-widths="[540, 720, 900, 1080, 1296, 1512, 1728, 1944, 2048]" data-sizes="auto"
          data-parent-fit="cover" alt="
          {% if  product.feature_image.alt != blank %}
          {{ product.feature_image.alt }}
          {% else %}
          {{ product.title }}
          {% endif %} ">
        {% comment %}
        {% endcomment %}
        {% else %}
        {{ 'product-1' | placeholder_svg_tag: 'product-img' }}
        {% endif %}
        <div class="product__card--status">
          {% unless product.available %}
          <!-- TODO: Sold out chip color -->
          <span class="product__card--status-soldout">sold out</span>
          {% endunless %}
          {% if product.compare_at_price_max > product.price %}
          <span class="product__card--status-soldout">  {{  product.compare_at_price_max | minus: product.price | times: 100.0 | divided_by: product.compare_at_price_max | remove: '.0' | slice: 0, 2 }} % off </span>
          {% endif %}
        </div>
      </div>
    </a>
    <div class="product__card-cta quick-view-button">

    </div>
  </div>
  <div class="product__card--content">
    <a href="{{ product.url | within: collection }}" class="product__card--link">
      <h2 itemprop="name" class="product__title">{{ product.title }}</h2>
      <div class="product__variant--price">
        {% if product.price_varies %}
        <p>From {{ product.price_min | money_with_currency }} to {{ product.price_max | money_without_currency }}</p>
        {% else %}
        <p>
          {% if product.compare_at_price_max > product.price %}
          <span><s>{{ product.compare_at_price_max | money_with_currency }}</s></span>
          <span>{{ product.price | money_with_currency }}</span>
          {% else %}
          <span>{{ product.price | money_with_currency }}</span>
          {% endif %}
        </p>
        {% endif %}
      </div>

      {% if customer and customer.tags contains 'admin' %}
      <div class="product__variant--sku">
        {% assign current_variant = product.selected_or_first_available_variant %}
        <span class="variant-sku">{{ current_variant.sku }}</span>
      </div>
      {% endif %}

        {% if product.variants.size > 1 %}
        <div class="product__variant--list" hidden>
          <span class="product__variant--list-title">
            {{product.options }} :
          </span>
          {% for variant in product.variants %}
          {% if variant.inventory_quantity == 0 %} <s>  {% endif %}
          <span class="product__variant--list-name"> {{ variant.title }} </span>
          {% if variant.inventory_quantity == 0 %} </s>  {% endif %}
          {% endfor %}
        </div>
        {% endif %}
    </a>
  </div>
</div>
      {% endfor %}
    </div>
    <div class="pagination--number">
      {{ paginate | default_pagination: next: 'Older', previous: 'Newer' }}
    </div>
    {% endpaginate %}
  </section>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
  const productJson = document.querySelectorAll('[id^=ProductJson-');

  if (productJson.length > 0) {
    for (let i = 0; i < productJson.length; i++) {
      const current = productJson[i];
      const sectionId = current.id.replace('ProductJson-', '');
      const section = document.querySelector('[data-section-id="' + sectionId + '"]');
      const product = JSON.parse(current.text);

      if (product.options.length === 1) {
        const unavailableVariants = [];

        for (let j = 0; j < product.variants.length; j++) {
          const variant = product.variants[j];

          if (!variant.available) {
            unavailableVariants.push(variant);
          }
        }

        if (unavailableVariants.length > 0) {
          const mutationCallback = function() {
            const variantOptions = section.querySelectorAll('.single-option-selector option');

            if (variantOptions.length > 0) {
              for (let k = 0; k < unavailableVariants.length; k++) {
                const unavailableVariant = unavailableVariants[k];

                for (let l = 0; l < variantOptions.length; l++) {
                  const option = variantOptions[l];

                  if (unavailableVariant.title === option.value) {
                    option.remove();
                  }
                }
              }

              if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
                observer.disconnect();
              }
            }
          }

          const observer = new MutationObserver(mutationCallback);
          const addToCartForm = document.querySelector('form[action*="/cart/add"]');

          mutationCallback();

          if (window.MutationObserver && addToCartForm.length) {
            const config = { childList: true, subtree: true };

            if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
              observer.disconnect();
            }

            observer.observe(addToCartForm, config);
          }
        }
      }
    }
  }
});

</script>
<script type="application/ld+json">
  {
    "@context":"https://schema.org",
    "@type":"ItemList",
    "itemListElement":[
    {% for product in collection.products limit: 9 %}
    {
      "@type":"ListItem",
      "position": {{ forloop.index }},
      "name": "{{ product.title }}",
      "url":"{{ shop.secure_url}}{{ product.url}}"
    },
    {% endfor %}
    {% for product in collection.products limit: 1 offset: continue%}
    {
      "@type":"ListItem",
      "position": 10,
      "name": "{{ product.title }}",
      "url":"{{ shop.secure_url}}{{ product.url}}"
    }
    {% endfor %}
    ]
  }
</script>
